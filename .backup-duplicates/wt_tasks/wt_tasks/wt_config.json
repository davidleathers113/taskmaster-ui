{
  "repository": {
    "baseRepo": "/Users/davidleathers/taskmaster-ui",
    "baseBranch": "main"
  },
  "worktrees": {
    "parentDir": null,
    "sharedFiles": [
      "CLAUDE.md",
      "README.md",
      ".env.example",
      ".gitignore",
      "package.json",
      "package-lock.json",
      "tsconfig.json",
      "tsconfig.node.json",
      "eslint.config.js",
      "vitest.config.ts",
      "vitest-setup.ts",
      "electron.vite.config.ts",
      "vite.config.ts",
      "vite.main.config.ts",
      "vite.preload.config.ts",
      "playwright.config.ts",
      "postcss.config.js",
      "tailwind.config.js",
      "electron-builder.yml",
      "dev-app-update.yml",
      "repomix.config.json",
      "__mocks__",
      "wt_tasks",
      "resources",
      "scripts",
      "docs",
      "run-dev.sh",
      "run-app.sh",
      "build-electron.sh",
      "tests/config",
      "tests/setup",
      "tests/mocks",
      "tests/fixtures",
      "tests/utils"
    ],
    "autoCleanup": true,
    "maxActiveWorktrees": 5
  },
  "tasks": [
    {
      "id": "ts-module-errors",
      "name": "TypeScript Module Resolution Errors",
      "description": "Fix TS2307 (cannot find module) and TS2484 (export conflicts) errors - approximately 76 errors total",
      "branchPrefix": "fix/",
      "category": "typescript",
      "priority": "high",
      "parallelSafe": true,
      "conflicts": [],
      "estimatedDuration": "2-3 days",
      "phase": 1,
      "errorTypes": ["TS2307", "TS2484"],
      "metrics": {
        "errorCount": 76,
        "filesAffected": "~40"
      }
    },
    {
      "id": "ts-type-safety",
      "name": "TypeScript Type Safety Errors",
      "description": "Fix TS7006 (implicit any), TS2532 (null/undefined), TS2345 (type assignment), TS2322 (type incompatibility) - 121+ errors",
      "branchPrefix": "fix/",
      "category": "typescript",
      "priority": "high",
      "parallelSafe": true,
      "conflicts": ["ts-module-errors"],
      "estimatedDuration": "3-4 days",
      "phase": 1,
      "errorTypes": ["TS7006", "TS2532", "TS2345", "TS2322"],
      "metrics": {
        "errorCount": 121,
        "filesAffected": "~60"
      }
    },
    {
      "id": "test-failure-analysis",
      "name": "Test Suite Failure Analysis",
      "description": "Analyze 40 failing tests out of 51 total, categorize failure patterns, and document testing strategy",
      "branchPrefix": "test/",
      "category": "testing",
      "priority": "medium",
      "parallelSafe": true,
      "conflicts": [],
      "estimatedDuration": "2 days",
      "phase": 2,
      "metrics": {
        "failingTests": 40,
        "totalTests": 51,
        "testFrameworks": ["vitest", "playwright"]
      }
    },
    {
      "id": "eslint-analysis",
      "name": "ESLint Problems Analysis",
      "description": "Analyze and categorize 1,887 ESLint problems (1,142 errors + 745 warnings)",
      "branchPrefix": "fix/",
      "category": "code-quality",
      "priority": "medium",
      "parallelSafe": true,
      "conflicts": [],
      "estimatedDuration": "1 day",
      "phase": 2,
      "metrics": {
        "totalProblems": 1887,
        "errors": 1142,
        "warnings": 745
      }
    },
    {
      "id": "ci-cd-setup",
      "name": "CI/CD Type Checking Setup",
      "description": "Set up automated type checking in CI/CD pipeline and document TypeScript best practices",
      "branchPrefix": "docs/",
      "category": "infrastructure",
      "priority": "low",
      "parallelSafe": true,
      "conflicts": [],
      "estimatedDuration": "1 day",
      "phase": 3
    }
  ],
  "terminals": {
    "windowWidth": 900,
    "windowHeight": 700,
    "initialPositionX": 50,
    "initialPositionY": 50,
    "offsetX": 40,
    "offsetY": 40,
    "titlePrefix": "TaskMaster - ",
    "useTerminalMultiplexer": false,
    "terminalApp": "Terminal"
  },
  "claude": {
    "enableInitialPrompt": true,
    "defaultPrompt": "Welcome to TaskMaster UI worktree for {TASK_NAME}!\n\n<task_context>\nTask: {TASK_NAME} ({TASK_ID})\nDescription: {TASK_DESCRIPTION}\nBranch: {BRANCH_NAME}\nPhase: {PHASE}\n</task_context>\n\n<project_context>\nThis is an Electron + React application using:\n- electron-vite for build system\n- TypeScript with strict mode\n- Zustand for state management\n- Tailwind CSS for styling\n- Vitest and Playwright for testing\n</project_context>\n\n<available_mcp_tools>\nYou have access to these MCP servers:\n\n1. **tree-sitter** - For code analysis and finding patterns\n   - Use: mcp__tree_sitter__find_text to locate code patterns\n   - Use: mcp__tree_sitter__get_symbols to extract symbols\n\n2. **taskmaster-ai** - For task tracking and progress\n   - Use: mcp__taskmaster-ai__get_task to check task details\n   - Use: mcp__taskmaster-ai__update_subtask to track progress\n\n3. **github** - For creating PRs and managing branches\n   - Use: mcp__github__create_pull_request when ready\n\n4. **sequential-thinking** - For planning complex fixes\n   - Use: When dealing with multiple related errors\n</available_mcp_tools>\n\n<error_context>\n{ERROR_CONTEXT}\n</error_context>\n\n<instructions>\n1. Start by reading the TASK.md file to understand specific requirements\n2. Use `npm run typecheck` to see current TypeScript errors\n3. Use `npm run lint` to see ESLint problems\n4. Focus on the specific error types assigned to this worktree\n5. Commit frequently with conventional commit messages\n6. Update the progress tracking file after each batch of fixes\n7. Create a PR when the task is complete\n\nRemember: Quality over speed. Each fix should be verified to not introduce new errors.\n</instructions>",
    "promptVariables": {
      "TASK_NAME": "{TASK_NAME}",
      "TASK_ID": "{TASK_ID}",
      "TASK_DESCRIPTION": "{TASK_DESCRIPTION}",
      "BRANCH_NAME": "{BRANCH_NAME}",
      "PHASE": "{PHASE}",
      "ERROR_CONTEXT": "{ERROR_CONTEXT}"
    }
  },
  "coordination": {
    "conflictResolution": "sequential",
    "sharedDirectories": [
      "/src/main",
      "/src/preload",
      "/src/renderer/src/components",
      "/src/renderer/src/store",
      "/src/renderer/src/types"
    ],
    "communicationFile": "wt_tasks/progress.md",
    "portAllocation": {
      "electronMainStart": 5170,
      "electronRendererStart": 5270,
      "serverStart": 3100,
      "increment": 1
    },
    "progressTracking": {
      "updateInterval": "30m",
      "metricsFile": "wt_tasks/metrics.json",
      "reportFormat": "markdown"
    }
  },
  "automation": {
    "preCommitChecks": ["typecheck", "lint"],
    "autoStage": false,
    "conventionalCommits": true,
    "branchProtection": true
  },
  "performance": {
    "enableCaching": true,
    "parallelLinting": true,
    "incrementalTypeChecking": true,
    "monitorResourceUsage": true
  }
}