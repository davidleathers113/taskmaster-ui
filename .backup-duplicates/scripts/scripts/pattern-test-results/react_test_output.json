[{"filePath":"/Users/davidleathers/taskmaster-ui/src/renderer/src/App.tsx","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":53,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":53,"endColumn":22,"suggestions":[{"fix":{"range":[1831,1876],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'errorHandledStore'. Either include it or remove the dependency array.","line":74,"column":6,"nodeType":"ArrayExpression","endLine":74,"endColumn":38,"suggestions":[{"desc":"Update the dependencies array to be: [errorHandledStore, errorHandledStore.loadFromJSON]","fix":{"range":[2649,2681],"text":"[errorHandledStore, errorHandledStore.loadFromJSON]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useEffect, lazy } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport { useTaskStore } from '@/store/useTaskStore'\nimport { useErrorHandledTaskStore } from '@/store/storeErrorWrapper'\nimport { Sidebar } from '@/components/layout/Sidebar'\nimport { Header } from '@/components/layout/Header'\nimport { MainContent } from '@/components/layout/MainContent'\nimport { ErrorBoundary } from '@/components/error/ErrorBoundary'\nimport { StoreErrorBoundary } from '@/components/error/StoreErrorBoundary'\nimport { SuspenseWrapper } from '@/components/ui/SuspenseWrapper'\nimport { DebugPanel } from '@/components/DebugPanel'\nimport { cn } from '@/lib/utils'\n\n// Lazy load components for better performance and to demonstrate Suspense\nconst TaskDetailPanel = lazy(() => \n  import('@/components/task/TaskDetailPanel').then(module => ({ \n    default: module.TaskDetailPanel \n  }))\n)\n\nconst CommandPalette = lazy(() => \n  import('@/components/ui/CommandPalette').then(module => ({ \n    default: module.CommandPalette \n  }))\n)\n\nconst ProjectManager = lazy(() => \n  import('@/components/project/ProjectManager').then(module => ({ \n    default: module.ProjectManager \n  }))\n)\n\nfunction App() {\n  // Use regular store for reactive state\n  const { \n    userSettings, \n    sidebarCollapsed, \n    selectedTask\n  } = useTaskStore()\n  \n  // Use error-handled store for operations\n  const errorHandledStore = useErrorHandledTaskStore()\n\n  useEffect(() => {\n    // Load tasks from the sample JSON file (Vite asset handling)\n    const loadTasks = async () => {\n      try {\n        // Vite handles assets in public directory via absolute paths\n        const response = await fetch('/sample-tasks.json')\n        const data = await response.json()\n        await errorHandledStore.loadFromJSON(data)\n      } catch (error) {\n        console.error('Failed to load tasks:', error)\n        // Load minimal sample data as fallback\n        await errorHandledStore.loadFromJSON({ \n          tasks: [\n            {\n              id: 1,\n              title: \"Welcome to TaskMaster!\",\n              description: \"This is a sample task to get you started with the most beautiful task management UI ever created.\",\n              details: \"Explore the interface, try different views, and experience the buttery smooth animations that make this UI a work of art.\",\n              testStrategy: \"Click around and enjoy the pixel-perfect design!\",\n              priority: \"high\" as const,\n              dependencies: [],\n              status: \"pending\" as const,\n              subtasks: []\n            }\n          ]\n        })\n      }\n    }\n    \n    loadTasks()\n  }, [errorHandledStore.loadFromJSON])\n\n  const isDark = userSettings.ui.theme === 'dark' || \n    (userSettings.ui.theme === 'system' && window.matchMedia('(prefers-color-scheme: dark)').matches)\n\n  return (\n    <StoreErrorBoundary \n      enableAutoRecovery={true}\n      maxAutoRecoveryAttempts={3}\n      showDeveloperInfo={process.env.NODE_ENV === 'development'}\n    >\n      <div className={cn(\n        \"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50\",\n        \"dark:from-slate-950 dark:via-slate-900 dark:to-slate-950\",\n        \"transition-all duration-500 ease-out\",\n        isDark && \"dark\"\n      )}>\n      {/* Debug Panel - Shows critical debug info */}\n      <DebugPanel />\n      \n      {/* Animated background elements */}\n      <div className=\"fixed inset-0 overflow-hidden pointer-events-none\">\n        <motion.div\n          className=\"absolute -top-1/2 -right-1/2 w-96 h-96 bg-gradient-to-br from-blue-400/20 to-purple-600/20 rounded-full blur-3xl\"\n          animate={{\n            x: [0, 100, 0],\n            y: [0, -50, 0],\n            scale: [1, 1.1, 1],\n          }}\n          transition={{\n            duration: 20,\n            repeat: Infinity,\n            repeatType: \"reverse\",\n            ease: \"easeInOut\",\n          }}\n        />\n        <motion.div\n          className=\"absolute -bottom-1/2 -left-1/2 w-96 h-96 bg-gradient-to-tr from-emerald-400/20 to-cyan-600/20 rounded-full blur-3xl\"\n          animate={{\n            x: [0, -100, 0],\n            y: [0, 50, 0],\n            scale: [1, 1.2, 1],\n          }}\n          transition={{\n            duration: 25,\n            repeat: Infinity,\n            repeatType: \"reverse\",\n            ease: \"easeInOut\",\n          }}\n        />\n      </div>\n\n      {/* Main layout */}\n      <div className=\"relative flex h-screen\">\n        {/* Sidebar */}\n        <motion.div\n          initial={false}\n          animate={{\n            width: sidebarCollapsed ? 80 : 280,\n          }}\n          transition={{\n            type: \"spring\",\n            stiffness: 400,\n            damping: 30,\n          }}\n          className=\"flex-shrink-0 border-r border-border/50 bg-background/80 backdrop-blur-xl\"\n        >\n          <Sidebar />\n        </motion.div>\n\n        {/* Main content area */}\n        <div className=\"flex-1 flex flex-col overflow-hidden\">\n          <Header />\n          \n          <div className=\"flex-1 flex overflow-hidden\">\n            {/* Main content */}\n            <motion.div\n              className=\"flex-1 overflow-hidden\"\n              layout\n              transition={{\n                type: \"spring\",\n                stiffness: 400,\n                damping: 30,\n              }}\n            >\n              <MainContent />\n            </motion.div>\n\n            {/* Task detail panel */}\n            <AnimatePresence mode=\"wait\">\n              {selectedTask && (\n                <motion.div\n                  initial={{ x: \"100%\", opacity: 0 }}\n                  animate={{ x: 0, opacity: 1 }}\n                  exit={{ x: \"100%\", opacity: 0 }}\n                  transition={{\n                    type: \"spring\",\n                    stiffness: 400,\n                    damping: 30,\n                  }}\n                  className=\"w-96 border-l border-border/50 bg-background/80 backdrop-blur-xl\"\n                >\n                  <ErrorBoundary level=\"component\">\n                    <SuspenseWrapper level=\"component\" name=\"Task Detail Panel\">\n                      <TaskDetailPanel />\n                    </SuspenseWrapper>\n                  </ErrorBoundary>\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </div>\n        </div>\n      </div>\n\n      {/* Command Palette */}\n      <ErrorBoundary level=\"component\">\n        <SuspenseWrapper level=\"component\" name=\"Command Palette\">\n          <CommandPalette />\n        </SuspenseWrapper>\n      </ErrorBoundary>\n\n      {/* Project Manager */}\n      <ErrorBoundary level=\"component\">\n        <SuspenseWrapper level=\"component\" name=\"Project Manager\">\n          <ProjectManager />\n        </SuspenseWrapper>\n      </ErrorBoundary>\n\n      {/* Global loading overlay */}\n      <AnimatePresence>\n        {useTaskStore.getState().isLoading && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"fixed inset-0 bg-background/50 backdrop-blur-sm flex items-center justify-center z-50\"\n          >\n            <motion.div\n              animate={{\n                rotate: 360,\n              }}\n              transition={{\n                duration: 1,\n                repeat: Infinity,\n                ease: \"linear\",\n              }}\n              className=\"w-8 h-8 border-2 border-primary border-t-transparent rounded-full\"\n            />\n          </motion.div>\n        )}\n      </AnimatePresence>\n      </div>\n    </StoreErrorBoundary>\n  )\n}\n\nexport default App","usedDeprecatedRules":[]}]
