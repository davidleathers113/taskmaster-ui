{
  "name": "taskmaster-ui",
  "version": "1.0.0",
  "main": "dist/main/index.cjs",
  "type": "module",
  "description": "TaskMaster Desktop - The most advanced task management desktop application",
  "author": "TaskMaster Team",
  "homepage": "https://github.com/taskmaster/taskmaster-ui",
  "scripts": {
    "dev": "electron-vite dev --inspect --sourcemap",
    "dev:watch": "electron-vite dev --watch --inspect --sourcemap",
    "dev:debug": "electron-vite dev --inspect-brk --sourcemap --trace-warnings",
    "dev:renderer": "electron-vite dev --rendererOnly",
    "dev:remote": "electron-vite dev --inspect=5858 --remote-debugging-port=9222 --sourcemap",
    "dev:logs": "ELECTRON_ENABLE_LOGGING=1 electron-vite dev --inspect --sourcemap --log-file=./logs/electron.log",
    "build": "electron-vite build",
    "preview": "electron-vite preview",
    "postinstall": "electron-builder install-app-deps",
    "dist": "npm run build && electron-builder",
    "dist:win": "npm run build && electron-builder --win",
    "dist:mac": "npm run build && electron-builder --mac",
    "dist:linux": "npm run build && electron-builder --linux",
    "dist:all": "npm run build && electron-builder -mwl",
    "pack": "npm run build && electron-builder --dir",
    "pack:win": "npm run build && electron-builder --win --dir",
    "pack:mac": "npm run build && electron-builder --mac --dir",
    "pack:linux": "npm run build && electron-builder --linux --dir",
    "publish": "npm run build && electron-builder -p always",
    "publish:github": "npm run build && electron-builder -p always --config electron-builder.yml",
    "release": "npm run build && electron-builder -p onTagOrDraft",
    "lint": "eslint . --max-warnings 0 --no-warn-ignored --fix",
    "lint:ci": "eslint . --max-warnings 0 --no-warn-ignored",
    "typecheck": "tsc --noEmit",
    "typecheck:watch": "tsc --noEmit --watch",
    "typecheck:strict": "tsc --noEmit --strict",
    "typecheck:all": "npm run typecheck && cd server && npx tsc --noEmit",
    "typecheck:ci": "npm run typecheck:all 2>&1 | tee typescript-errors.log",
    "server:install": "cd server && npm install",
    "server:dev": "cd server && npm run dev",
    "server:start": "cd server && npm start",
    "setup": "npm install && npm run server:install",
    "start:all": "concurrently \"npm run server:dev\" \"npm run dev:watch\" --names \"SERVER,UI\" --prefix-colors \"green,blue\"",
    "start:all:debug": "concurrently \"npm run server:dev\" \"npm run dev:debug\" --names \"SERVER,UI\" --prefix-colors \"green,yellow\"",
    "security:audit": "npm audit --audit-level moderate && cd server && npm audit --audit-level moderate",
    "security:check": "npm outdated && cd server && npm outdated",
    "security:fix": "npm audit fix && cd server && npm audit fix",
    "security:full": "npm run security:audit && npm run security:check",
    "ci:validate": "npm run typecheck && npm run lint && npm run build && npm run security:audit",
    "pre-commit": "npm run lint && npm run typecheck",
    "lint:claude": "claude -p 'You are a TypeScript/React linter. Analyze the staged changes vs. main branch and report any issues related to: 1) Type safety problems 2) Code quality issues 3) Performance concerns 4) Security vulnerabilities. Report filename:line on one line, description on the next. Return only issues found.' --output-format text",
    "review:staged": "./wt_tasks/claude-utils.sh review_changes",
    "commit:ai": "./wt_tasks/create-pr-report-ai.sh",
    "analyze:ts": "./wt_tasks/claude-utils.sh analyze_ts_errors",
    "docs:generate": "./wt_tasks/claude-utils.sh generate_docs",
    "start:prod": "./run-app.sh",
    "start:dev": "./run-dev.sh",
    "test": "vitest",
    "test:run": "vitest run",
    "test:ui": "vitest --ui",
    "test:coverage": "vitest run --coverage",
    "test:watch": "vitest --watch",
    "test:debug": "vitest --inspect-brk --no-coverage",
    "test:main": "vitest run --project main",
    "test:renderer": "vitest run --project renderer",
    "test:preload": "vitest run --project preload",
    "test:integration": "vitest run --project integration",
    "test:e2e": "playwright test tests/e2e",
    "test:e2e:visual": "playwright test --project=visual",
    "test:e2e:performance": "playwright test --project=performance",
    "test:e2e:accessibility": "playwright test --project=accessibility",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:debug": "playwright test --debug",
    "test:e2e:headed": "playwright test --headed",
    "test:e2e:report": "playwright show-report",
    "test:memory": "playwright test tests/e2e/memory-basic.e2e.test.ts",
    "test:memory:detailed": "NODE_OPTIONS='--expose-gc --max-old-space-size=512' playwright test tests/e2e/memory-leak.e2e.test.ts --project=electron-main",
    "test:security": "electronegativity -i ./src",
    "test:security:deps": "node scripts/dependency-vulnerability-scan.js",
    "test:security:csp": "node scripts/csp-security-test.js",
    "test:security:electron": "playwright test tests/e2e/electron-security.test.ts",
    "test:security:baseline": "node scripts/security-baseline.js",
    "test:security:baseline:update": "node scripts/security-baseline.js --update-baseline",
    "test:security:full": "npm run test:security && npm run test:security:deps && npm run test:security:csp && npm run test:security:electron",
    "test:benchmark": "playwright test tests/e2e/app-metrics.performance.test.ts --project=performance",
    "memlab:task-operations": "memlab run --scenario tests/memlab-scenarios/task-operations.memlab.ts",
    "memlab:view-switching": "memlab run --scenario tests/memlab-scenarios/view-switching.memlab.ts",
    "memlab:extended-usage": "memlab run --scenario tests/memlab-scenarios/extended-usage.memlab.ts",
    "memlab:all": "npm run memlab:task-operations && npm run memlab:view-switching && npm run memlab:extended-usage",
    "test:performance": "clinic doctor -- npm run test:integration",
    "test:memory:clinic": "clinic bubbleprof -- npm run test:integration",
    "test:all": "npm run test:run && npm run test:security",
    "test:ci": "vitest run --coverage --reporter=junit --outputFile=./test-results/junit.xml && npm run test:e2e && npm run test:security:full",
    "cleanup:windows": "./cleanup-electron.sh",
    "cleanup:test": "pkill -f electron || true && pkill -f vitest || true",
    "benchmark:start": "NODE_ENV=test npm run start:dev",
    "benchmark:full": "npm run benchmark:start & sleep 10 && npm run test:benchmark && npm run memlab:all"
  },
  "dependencies": {
    "@emotion/react": "^11.14.0",
    "@emotion/styled": "^11.14.0",
    "@mui/icons-material": "^6.1.8",
    "@mui/material": "^6.1.8",
    "apexcharts": "^4.7.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "date-fns": "^4.1.0",
    "electron-log": "^5.4.0",
    "framer-motion": "^12.15.0",
    "immer": "^10.1.1",
    "lucide-react": "^0.515.0",
    "react": "^18.3.1",
    "react-apexcharts": "^1.7.0",
    "react-dom": "^18.3.1",
    "react-error-boundary": "^6.0.0",
    "react-json-view-lite": "^2.4.1",
    "tailwind-merge": "^2.5.5",
    "zustand": "^5.0.2"
  },
  "devDependencies": {
    "@axe-core/playwright": "^4.10.1",
    "@clinic/bubbleprof": "^10.0.0",
    "@clinic/doctor": "^11.0.0",
    "@doyensec/electronegativity": "^1.10.3",
    "@eslint/js": "^9.28.0",
    "@memlab/api": "^1.0.40",
    "@playwright/test": "^1.52.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/chokidar": "^1.7.5",
    "@types/express": "^5.0.2",
    "@types/node": "^22.15.29",
    "@types/react": "^18.3.17",
    "@types/react-dom": "^18.3.5",
    "@vitejs/plugin-react": "^4.3.4",
    "@vitest/coverage-v8": "^3.2.0",
    "@vitest/ui": "^3.2.0",
    "autoprefixer": "^10.4.20",
    "chokidar": "^4.0.3",
    "clinic": "^13.0.0",
    "concurrently": "^9.1.0",
    "csp-parse": "^0.0.2",
    "electron": "36.3.2",
    "electron-builder": "^26.0.12",
    "electron-updater": "^6.6.2",
    "electron-vite": "^3.1.0",
    "es-module-lexer": "^1.7.0",
    "eslint": "^9.28.0",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.16",
    "glob": "^11.0.2",
    "globals": "^16.2.0",
    "happy-dom": "^17.5.6",
    "husky": "^9.1.7",
    "jest-electron": "^0.1.12",
    "jsdom": "^26.1.0",
    "lint-staged": "^16.1.0",
    "memlab": "^1.1.58",
    "playwright-lighthouse": "^4.0.0",
    "postcss": "^8.5.4",
    "rollup-plugin-visualizer": "^6.0.1",
    "tailwindcss": "^3.4.17",
    "terser": "^5.40.0",
    "ts-morph": "^26.0.0",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.33.1",
    "vite": "^6.0.5",
    "vitest": "^3.2.0"
  }
}
